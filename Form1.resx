<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>